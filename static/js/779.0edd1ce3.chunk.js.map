{"version":3,"file":"static/js/779.0edd1ce3.chunk.js","mappings":"wRAEaA,EAAaC,EAAAA,GAAAA,GAAH,+CAIVC,EAAOD,EAAAA,GAAAA,GAAH,8FAMJE,EAASF,EAAAA,GAAAA,EAAH,wFAMNG,EAAUH,EAAAA,GAAAA,EAAH,yFAMPI,EAAWJ,EAAAA,GAAAA,EAAH,8G,SClBN,SAASK,IACtB,IACMC,GADcC,EAAAA,EAAAA,MAAZC,QAGR,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,8GAE0BC,EAAAA,EAAAA,IAAgBP,GAF1C,OAEUQ,EAFV,OAGIH,EAAWG,EAAQA,SAHvB,gDAKIC,QAAQC,IAAI,QAAZ,MALJ,0DALc,sBACTV,GADS,mCAadW,KACC,CAACX,IAEAI,EAAQQ,OAAS,GAEjB,SAACnB,EAAD,UACGW,GACCA,EAAQS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASf,EAAS,EAATA,GAC9B,OACE,UAACL,EAAD,YACE,UAACC,EAAD,sBAAiBkB,MACjB,SAACjB,EAAD,UAAUkB,MAFDf,SAShB,SAACF,EAAD,mD,yMCzCHkB,EAAW,gCACXC,EAAU,mCAEHC,EAAW,mCAAG,oGACFC,IAAAA,IAAA,UAClBH,EADkB,qCACmBC,IAFjB,cACnBG,EADmB,yBAKlBA,EAASC,KAAKb,SALI,2CAAH,qDAQXc,EAAW,mCAAG,WAAMC,GAAN,uFACFJ,IAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BM,IAF7B,cACnBH,EADmB,yBAKlBA,EAASC,KAAKb,SALI,2CAAH,sDAQXgB,EAAe,mCAAG,WAAMxB,GAAN,uFACNmB,IAAAA,IAAA,UAAaH,EAAb,iBAA8BhB,EAA9B,oBAA4CiB,IADtC,cACvBG,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfI,EAAe,mCAAG,WAAMzB,GAAN,uFACNmB,IAAAA,IAAA,UAClBH,EADkB,iBACDhB,EADC,4BACqBiB,IAFf,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfd,EAAe,mCAAG,WAAMP,GAAN,uFACNmB,IAAAA,IAAA,UAClBH,EADkB,iBACDhB,EADC,4BACqBiB,IAFf,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  padding: 15px 35px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 32px;\n  margin-right: 15px;\n  border-radius: 5px;\n`;\n\nexport const Author = styled.p`\n  font-weight: bold;\n  color: #25468e;\n  margin-bottom: 5px;\n`;\n\nexport const Content = styled.p`\n  font-weight: normal;\n  color: #1e2d4f;\n  max-width: 1024px;\n`;\n\nexport const NoReview = styled.p`\n  font-weight: bold;\n  margin-bottom: 5px;\n  color: #25468e;\n  margin-left: 35px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/api';\n\nimport { ReviewList, Item, Author, Content, NoReview } from './Reviews.styled';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const id = movieId;\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n\n    async function fetchReviews() {\n      try {\n        const results = await getMovieReviews(id);\n        setReviews(results.results);\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    fetchReviews();\n  }, [id]);\n\n  if (reviews.length > 0) {\n    return (\n      <ReviewList>\n        {reviews &&\n          reviews.map(({ author, content, id }) => {\n            return (\n              <Item key={id}>\n                <Author>Author: {author}</Author>\n                <Content>{content}</Content>\n              </Item>\n            );\n          })}\n      </ReviewList>\n    );\n  }\n  return <NoReview> There is no reviews on this movie</NoReview>;\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f79920d6bdc281c9e2ec94ad5c996acc';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const serchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n"],"names":["ReviewList","styled","Item","Author","Content","NoReview","Reviews","id","useParams","movieId","useState","reviews","setReviews","useEffect","getMovieReviews","results","console","log","fetchReviews","length","map","author","content","BASE_URL","API_KEY","getTrending","axios","response","data","serchMovies","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}