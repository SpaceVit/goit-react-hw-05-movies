{"version":3,"file":"static/js/387.0588a98b.chunk.js","mappings":"gSAEaA,EAAaC,EAAAA,GAAAA,IAAH,oNAWVC,EAAYD,EAAAA,GAAAA,GAAH,qFAMTE,EAAOF,EAAAA,GAAAA,GAAH,8FAMJG,EAAcH,EAAAA,GAAAA,EAAH,0G,SClBT,SAASI,IACtB,IACMC,GADcC,EAAAA,EAAAA,MAAZC,QAGR,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,8GAE0BC,EAAAA,EAAAA,IAAgBP,GAF1C,OAEUQ,EAFV,OAGIH,EAASG,EAAQC,MAHrB,gDAKIC,QAAQC,IAAI,QAAZ,MALJ,0DALc,sBACTX,GADS,mCAadY,KACC,CAACZ,KAGF,SAACJ,EAAD,UACGQ,GACCA,EAAMS,KAAI,YAA2D,IAAxDC,EAAuD,EAAvDA,aAAcC,EAAyC,EAAzCA,KAAMf,EAAmC,EAAnCA,GAAIgB,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAE5CC,EAAcJ,EADH,mCAEFA,EACXK,EAEJ,OACE,UAACtB,EAAD,YACE,SAACH,EAAD,CAAY0B,IAAKF,EAAaG,IAAKN,KACnC,UAACjB,EAAD,eAAeiB,GAAQC,MACvB,UAAClB,EAAD,yBAAyBmB,OAHhBjB,U,yMCrCjBsB,EAAW,gCACXC,EAAU,mCAEHC,EAAW,mCAAG,oGACFC,IAAAA,IAAA,UAClBH,EADkB,qCACmBC,IAFjB,cACnBG,EADmB,yBAKlBA,EAASC,KAAKnB,SALI,2CAAH,qDAQXoB,EAAW,mCAAG,WAAMC,GAAN,uFACFJ,IAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BM,IAF7B,cACnBH,EADmB,yBAKlBA,EAASC,KAAKnB,SALI,2CAAH,sDAQXsB,EAAe,mCAAG,WAAM9B,GAAN,uFACNyB,IAAAA,IAAA,UAAaH,EAAb,iBAA8BtB,EAA9B,oBAA4CuB,IADtC,cACvBG,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfpB,EAAe,mCAAG,WAAMP,GAAN,uFACNyB,IAAAA,IAAA,UAClBH,EADkB,iBACDtB,EADC,4BACqBuB,IAFf,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfI,EAAe,mCAAG,WAAM/B,GAAN,uFACNyB,IAAAA,IAAA,UAClBH,EADkB,iBACDtB,EADC,4BACqBuB,IAFf,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,uD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ProfileImg = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  border-radius: 5px;\n  width: 140px;\n  height: 200px;\n  margin-bottom: 10px;\n  box-shadow: rgb(0 0 0 / 70%) 5px 5px 13px 0px;\n`;\n\nexport const CastsList = styled.ul`\n  padding: 15px 35px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 32px;\n  margin-right: 15px;\n  border-radius: 5px;\n`;\n\nexport const Description = styled.p`\n  font-weight: bold;\n  font-size: 10px;\n  max-width: 140px;\n  color: #25468e;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../services/api';\nimport defaultImg from '../../defaultImg/defaultImg.jpg';\n\nimport { ProfileImg, CastsList, Item, Description } from './Cast.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const id = movieId;\n\n  const [casts, setCasts] = useState(null);\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n\n    async function fetchCredits() {\n      try {\n        const results = await getMovieCredits(id);\n        setCasts(results.cast);\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    fetchCredits();\n  }, [id]);\n\n  return (\n    <CastsList>\n      {casts &&\n        casts.map(({ profile_path, name, id, original_name, character }) => {\n          const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n          const profilePath = profile_path\n            ? IMG_PATH + profile_path\n            : defaultImg;\n\n          return (\n            <Item key={id}>\n              <ProfileImg src={profilePath} alt={name} />\n              <Description> {name || original_name}</Description>\n              <Description>Character: {character}</Description>\n            </Item>\n          );\n        })}\n    </CastsList>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f79920d6bdc281c9e2ec94ad5c996acc';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const serchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n"],"names":["ProfileImg","styled","CastsList","Item","Description","Cast","id","useParams","movieId","useState","casts","setCasts","useEffect","getMovieCredits","results","cast","console","log","fetchCredits","map","profile_path","name","original_name","character","profilePath","defaultImg","src","alt","BASE_URL","API_KEY","getTrending","axios","response","data","serchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}