{"version":3,"file":"static/js/313.3757399d.chunk.js","mappings":"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","sources":["components/Movies/Movies.styled.js","components/Movies/Movies.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  margin: auto;\n  outline: none;\n  padding: 0 10px;\n  width: 30px;\n  height: 20px;\n  color: #ffffff;\n  background-image: linear-gradient(#1f3c7a, #7192da, #1f3c7a);\n  border: none;\n  cursor: pointer;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n\n  &::first-letter {\n    text-transform: uppercase;\n  }\n  &:hover,\n  &:focus {\n    background-color: #8080ff;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  border: none;\n  color: #ffffff;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 10px;\n  background-image: linear-gradient(#1f3c7a, #7192da, #1f3c7a);\n  box-shadow: rgb(0 0 0 / 70%) 5px 5px 13px 0px;\n  &::placeholder {\n    font: inherit;\n    font-size: 17px;\n  }\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  border-radius: 5px;\n  overflow: hidden;\n  padding-left: 35px;\n`;\n","import { useState, useEffect } from 'react';\nimport { serchMovies } from '../../services/api';\nimport { VscSearch } from 'react-icons/vsc';\nimport { toast } from 'react-toastify';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Button, Input, StyledForm } from './Movies.styled';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState(null);\n  const [value, setValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    async function getMoviesByQuery() {\n      try {\n        const results = await serchMovies(query);\n        setMovies(results);\n\n        if (results.length === 0) {\n          toast.info(`There are no movies with the name ${query}`);\n        }\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    query && getMoviesByQuery();\n  }, [query]);\n\n  const handleInputChange = e => {\n    const { value } = e.target;\n    setValue(value);\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    if (value.trim() === '') {\n      toast.info('I didn`t catch what you are looking for. Enter movie name.');\n    } else {\n      setSearchParams({ query: value });\n      setValue('');\n    }\n  };\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmitForm}>\n        <Button type=\"submit\">\n          <VscSearch size={13} />\n        </Button>\n\n        <Input\n          type=\"text\"\n          placeholder=\"Make a wish\"\n          onChange={handleInputChange}\n          value={value}\n        />\n      </StyledForm>\n\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0px 20px;\n  margin: 0 auto;\n  width: 100%;\n`;\n\nexport const FilmsList = styled.ul`\n  padding: 15px 30px;\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -16px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 32px;\n  margin-right: 15px;\n  border-radius: 5px;\n`;\n\nexport const FilmPoster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  border-radius: 5px;\n  width: 280px;\n  height: 402px;\n  margin-bottom: 5px;\n  box-shadow: rgb(0 0 0 / 70%) 5px 5px 13px 0px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Title = styled.p`\n  text-align: center;\n  font-weight: bold;\n  max-width: 280px;\n  color: #25468e;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  Container,\n  FilmsList,\n  Item,\n  FilmPoster,\n  Title,\n} from './MoviesList.styled';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <Container>\n      <FilmsList>\n        {movies &&\n          movies.map(movie => (\n            <Item key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <FilmPoster\n                  src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                  alt={movie.original_title}\n                />\n                <Title>{movie.name || movie.original_title}</Title>\n              </Link>\n            </Item>\n          ))}\n      </FilmsList>\n    </Container>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'http://api.themoviedb.org/3/';\nconst API_KEY = 'f79920d6bdc281c9e2ec94ad5c996acc';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const serchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n"],"names":["Button","styled","Input","StyledForm","Movies","useState","movies","setMovies","value","setValue","useSearchParams","searchParams","setSearchParams","query","get","useEffect","serchMovies","results","length","toast","console","log","getMoviesByQuery","onSubmit","e","preventDefault","trim","type","size","placeholder","onChange","target","MoviesList","Container","FilmsList","Item","FilmPoster","Title","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","original_title","name","BASE_URL","API_KEY","getTrending","axios","response","data","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}