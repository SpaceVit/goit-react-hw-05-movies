{"version":3,"file":"static/js/793.8926697d.chunk.js","mappings":"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","sources":["components/InfoCard/InfoCard.styled.js","components/InfoCard/InfoCard.jsx","pages/MovieInfo/MovieInfo.styled.js","pages/MovieInfo/MovieInfo.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CardWrap = styled.div`\n  display: flex;\n  margin-top: 35px;\n`;\n\nexport const InfoWrap = styled.div`\n  margin-left: 35px;\n  width: 500px;\n`;\n\nexport const FilmPoster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  border-radius: 5px;\n  width: 280px;\n  height: 400px;\n  margin-left: 35px;\n  box-shadow: rgb(0 0 0 / 70%) 5px 5px 13px 0px;\n`;\n\nexport const Title = styled.p`\n  font-weight: bold;\n  font-size: 32px;\n  color: #25468e;\n  margin-bottom: 20px;\n`;\n\nexport const ReleaseDate = styled.p`\n  font-weight: bold;\n\n  color: #25468e;\n  margin-bottom: 15px;\n`;\n\nexport const UserScore = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const Overview = styled.p`\n  font-weight: bold;\n  margin-bottom: 5px;\n  color: #25468e;\n`;\n\nexport const OverviewText = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const Genres = styled.p`\n  font-weight: bold;\n  margin-bottom: 5px;\n  color: #25468e;\n`;\n\nexport const GenresList = styled.span`\n  margin-right: 5px;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  FilmPoster,\n  CardWrap,\n  InfoWrap,\n  Title,\n  ReleaseDate,\n  Overview,\n  UserScore,\n  OverviewText,\n  Genres,\n  GenresList,\n} from './InfoCard.styled';\nimport defaultImg from '../../defaultImg/defaultImg.jpg';\n\nexport default function InfoCard({ movieInfo }) {\n  const {\n    title,\n    release_date,\n    overview,\n    vote_average,\n    poster_path,\n    backdrop_path,\n    genres,\n  } = movieInfo;\n\n  const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n  const posterImg =\n    poster_path || backdrop_path\n      ? IMG_PATH + (poster_path ?? backdrop_path)\n      : defaultImg;\n\n  return (\n    <CardWrap>\n      <FilmPoster src={posterImg} alt={title} />\n      <InfoWrap>\n        <Title>{title}</Title>\n        <ReleaseDate>\n          Release date: {release_date && release_date.slice(0, 4)}\n        </ReleaseDate>\n        <UserScore>User Score: {Math.round(vote_average * 10)}%</UserScore>\n        <Overview>Overview:</Overview>\n        <OverviewText>{overview}</OverviewText>\n        <Genres>Genres</Genres>\n        <p>\n          {genres &&\n            genres.map(({ id, name }) => (\n              <GenresList key={id}>{name},</GenresList>\n            ))}\n        </p>\n      </InfoWrap>\n    </CardWrap>\n  );\n}\n\nInfoCard.propTypes = {\n  movieInfo: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const AddWrap = styled.div`\n  padding: 35px;\n  padding-left: 85px;\n`;\n\nexport const Title = styled.p`\n  font-weight: bold;\n  margin-bottom: 5px;\n  color: #25468e;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 10px;\n  color: #25468e;\n  text-decoration: none;\n  &.active {\n    color: white;\n    text-decoration: underline;\n  }\n  &:hover:not(.active) {\n    color: #ebeffa;\n  }\n`;\n\nexport const LinksWrap = styled.ul`\n  display: flex;\n`;\n\nexport const CastLink = styled.li`\n  margin-right: 45px;\n`;\n\nexport const BackLink = styled(NavLink)`\n  padding: 10px;\n  color: #25468e;\n  text-decoration: none;\n  margin-left: 35px;\n  &.active {\n    color: white;\n    text-decoration: underline;\n  }\n  &:hover:not(.active) {\n    color: #ebeffa;\n  }\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieDetails } from '../../services/api';\nimport InfoCard from '../../components/InfoCard/InfoCard';\n\nimport {\n  AddWrap,\n  Title,\n  Link,\n  LinksWrap,\n  CastLink,\n  BackLink,\n} from './MovieInfo.styled';\n\nexport default function MovieInfo() {\n  const params = useParams();\n  const id = params.movieId;\n\n  const [movieInfo, setMovieInfo] = useState({});\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n\n    async function fetchMovieInfo() {\n      try {\n        const results = await getMovieDetails(id);\n        setMovieInfo(results);\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    fetchMovieInfo();\n  }, [id]);\n\n  return (\n    <div>\n      <BackLink to={location.state?.from ?? '/'}> Back </BackLink>\n      <InfoCard movieInfo={movieInfo} />\n      <AddWrap>\n        <Title>Additional Information</Title>\n        <LinksWrap>\n          <CastLink>\n            <Link to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n          </CastLink>\n          <li>\n            <Link to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </LinksWrap>\n      </AddWrap>\n      <Outlet context={id} />\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f79920d6bdc281c9e2ec94ad5c996acc';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const serchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n"],"names":["CardWrap","styled","InfoWrap","FilmPoster","Title","ReleaseDate","UserScore","Overview","OverviewText","Genres","GenresList","InfoCard","movieInfo","title","release_date","overview","vote_average","poster_path","backdrop_path","genres","posterImg","defaultImg","src","alt","slice","Math","round","map","id","name","AddWrap","Link","NavLink","LinksWrap","CastLink","BackLink","MovieInfo","useParams","movieId","useState","setMovieInfo","location","useLocation","useEffect","getMovieDetails","results","console","log","fetchMovieInfo","to","state","from","context","BASE_URL","API_KEY","getTrending","axios","response","data","serchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}