{"version":3,"file":"static/js/156.ff477b27.chunk.js","mappings":"2NAEaA,EAAYC,EAAAA,GAAAA,IAAH,iFAMTC,EAAYD,EAAAA,GAAAA,GAAH,4GAOTE,EAAOF,EAAAA,GAAAA,GAAH,8FAMJG,EAAaH,EAAAA,GAAAA,IAAH,+TAeVI,EAAQJ,EAAAA,GAAAA,EAAH,6G,SC1BH,SAASK,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACT,EAAD,WACE,SAACE,EAAD,UACGK,GACCA,EAAOG,KAAI,SAAAC,GAAK,OACd,SAACR,EAAD,WACE,UAAC,KAAD,CAAMS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,WACE,SAACJ,EAAD,CACEY,IAAG,0CAAqCL,EAAMM,aAC9CC,IAAKP,EAAMQ,kBAEb,SAACd,EAAD,UAAQM,EAAMS,MAAQT,EAAMQ,qBANrBR,EAAME,a,mJCfhBR,E,QAAQJ,GAAAA,EAAH,4G,SCGH,SAASoB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOf,EAAP,KAAegB,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE0BC,EAAAA,EAAAA,MAF1B,OAEUC,EAFV,OAGIH,EAAUG,GAHd,gDAKIC,QAAQC,IAAI,QAAZ,MALJ,0DADc,uBAAC,WAAD,wBASdC,KACC,KAGD,6BACE,SAACxB,EAAD,6BACCE,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,S,yMCrB/BuB,EAAW,gCACXC,EAAU,mCAEHN,EAAW,mCAAG,oGACFO,IAAAA,IAAA,UAClBF,EADkB,qCACmBC,IAFjB,cACnBE,EADmB,yBAKlBA,EAASC,KAAKR,SALI,2CAAH,qDAQXS,EAAW,mCAAG,WAAMC,GAAN,uFACFJ,IAAAA,IAAA,UAClBF,EADkB,gCACcC,EADd,kBAC+BK,IAF7B,cACnBH,EADmB,yBAKlBA,EAASC,KAAKR,SALI,2CAAH,sDAQXW,EAAe,mCAAG,WAAMxB,GAAN,uFACNmB,IAAAA,IAAA,UAAaF,EAAb,iBAA8BjB,EAA9B,oBAA4CkB,IADtC,cACvBE,EADuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfI,EAAe,mCAAG,WAAMzB,GAAN,uFACNmB,IAAAA,IAAA,UAClBF,EADkB,iBACDjB,EADC,4BACqBkB,IAFf,cACvBE,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfK,EAAe,mCAAG,WAAM1B,GAAN,uFACNmB,IAAAA,IAAA,UAClBF,EADkB,iBACDjB,EADC,4BACqBkB,IAFf,cACvBE,EADuB,yBAKtBA,EAASC,MALa,2CAAH","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0px 20px;\n  margin: 0 auto;\n  width: 100%;\n`;\n\nexport const FilmsList = styled.ul`\n  padding: 15px 30px;\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -16px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 32px;\n  margin-right: 15px;\n  border-radius: 5px;\n`;\n\nexport const FilmPoster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  border-radius: 5px;\n  width: 280px;\n  height: 402px;\n  margin-bottom: 5px;\n  box-shadow: rgb(0 0 0 / 70%) 5px 5px 13px 0px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Title = styled.p`\n  text-align: center;\n  font-weight: bold;\n  max-width: 280px;\n  color: #25468e;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Container,\n  FilmsList,\n  Item,\n  FilmPoster,\n  Title,\n} from './MoviesList.styled';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <Container>\n      <FilmsList>\n        {movies &&\n          movies.map(movie => (\n            <Item key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <FilmPoster\n                  src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                  alt={movie.original_title}\n                />\n                <Title>{movie.name || movie.original_title}</Title>\n              </Link>\n            </Item>\n          ))}\n      </FilmsList>\n    </Container>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  text-align: center;\n  font-size: 36px;\n  font-weight: bold;\n  color: #25468e;\n`;\n","import { useState, useEffect } from 'react';\nimport { getTrending } from '../../services/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Title } from './HomePage.styled';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const results = await getTrending();\n        setMovies(results);\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      <Title>Trending Films</Title>\n      {movies && <MoviesList movies={movies} />}\n    </main>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f79920d6bdc281c9e2ec94ad5c996acc';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const serchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n"],"names":["Container","styled","FilmsList","Item","FilmPoster","Title","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","original_title","name","HomePage","useState","setMovies","useEffect","getTrending","results","console","log","fetchMovies","BASE_URL","API_KEY","axios","response","data","serchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}